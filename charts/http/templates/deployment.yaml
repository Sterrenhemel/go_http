apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "http.fullname" . }}
  labels:
    {{- include "http.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "http.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "http.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "http.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      # Add the ConfigMap as a volume to the Pod
      volumes:
        # `name` here must match the name
        # specified in the volume mount
        {{- $cpath := .Values.configs.path }}
        {{- range $path, $_ :=  .Files.Glob  $cpath }}
        - name: {{ base $path | trimSuffix ".yaml" }}
          configMap:
            name: {{ base $path | trimSuffix ".yaml" }}-configmap
        {{- end }}
        {{- $jpath := .Values.json.path }}
          {{- range $path, $_ :=  .Files.Glob  $jpath }}
        - name: {{ base $path | trimSuffix ".json" }}
          configMap:
            name: {{ base $path | trimSuffix ".json" }}-configmap
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
          {{- range $path, $_ :=  .Files.Glob  $cpath }}
          - name: {{ base $path | trimSuffix ".yaml" }}
            mountPath: /configs/{{ base $path | trimSuffix ".yaml" }}
          {{- end }}
          {{- range $path, $_ :=  .Files.Glob  $jpath }}
          - name: {{ base $path | trimSuffix ".json" }}
            mountPath: /configs/{{ base $path | trimSuffix ".json" }}
          {{- end }}
          envFrom:
          {{- $epath := .Values.env.path }}
          {{- range $path, $_ :=  .Files.Glob  $epath }}
          - configMapRef:
              name: {{ base $path | trimSuffix ".yaml" }}-configmap
          {{- end }}
          {{- if eq .Values.serviceType "http" }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
